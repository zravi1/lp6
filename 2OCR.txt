
from tensorflow import keras

import matplotlib.pyplot as plt 

import pandas as pd
import numpy as np 

(x_train,y_train),(x_test,y_test)=keras.datasets.mnist.load_data()



plt.imshow(x_train[0])

plt.imshow(x_train[8])

plt.imshow(x_train[3],cmap='gray')

print("X_train : ",x_train.shape)
print("X_test : ",x_test.shape)
print("Y_train : ",y_train.shape)
print("Y_test : ",x_test.shape)

x_train = x_train /255.0

x_test = x_test /255.0

28*28

x_train = x_train.reshape(60000,784)

x_test = x_test.reshape(10000,784)

print("X_train : ",x_train.shape)
print("X_test : ",x_test.shape)

import keras 


model = keras.Sequential([
    keras.layers.Dense(512,activation='relu',input_shape=(784,)),
    keras.layers.Dropout(0.2),
    keras.layers.Dense(512,activation='relu'),
    keras.layers.Dropout(0.2),
    keras.layers.Dense(10,activation='relu')
])


from keras.utils.vis_utils import plot_model
plot_model(model, show_shapes='True',show_layer_names='True')

model=keras.Sequential([
    keras.layers.Dense(32,activation='relu',input_shape=(784,)),
    keras.layers.Dropout(0.2),
    keras.layers.Dense(64,activation='relu'),
    keras.layers.Dropout(0.2),
    keras.layers.Dense(128,activation='relu'),
    keras.layers.Dropout(0.2),
    keras.layers.Dense(10,activation='softmax')
    
])

model.compile(optimizer='adam',loss='mse',metrics='mae')

model.fit(x_train,y_train,epochs=2)

output=model.evaluate(x_test,y_test)

model.summary()





